«IMPORT myAdminDsl»
«EXTENSION templates::Extensions»
«EXTENSION org::eclipse::xtend::util::stdlib::io»

«DEFINE gwtRemoteServiceLocator FOR Model»
«FILE fullQualifiedGWTRemoteServiceLocatorFileName()-»

package «fullQualifiedGWTRemoteServiceLocatorPackage()»;

public class «gwtRemoteServiceLocatorName()» implements «gwtRemoteServiceLocatorInterfaceName()» {

    private static final «gwtRemoteServiceLocatorName()» instance =
        new «gwtRemoteServiceLocatorName()»();

    private «gwtRemoteServiceLocatorName()»() {
    }

    public static «gwtRemoteServiceLocatorName()» getInstance() {
        return instance;
    }
    
   	private String remoteBaseUrl = null;
	
	public void setRemoteBaseUrl(String remoteBaseUrl)
	{
		this.remoteBaseUrl = remoteBaseUrl;
	}
    
    public String getModuleBaseUrl()
    {
	    if (remoteBaseUrl != null)
	    {
			return remoteBaseUrl;
	    }
	    else
	    {
	    	return com.google.gwt.core.client.GWT.getModuleBaseURL() + "../remote/rpc"; 
	    }
    } 

	«FOREACH allElements().typeSelect(RemoteService) AS remoteService»
		«IF !isNonPublic(remoteService)»
		 	public «fullQualifiedInterfaceNameGWTAsync(remoteService)» get«serviceName(remoteService)»() {
				final «fullQualifiedInterfaceNameGWTAsync(remoteService)» service = («fullQualifiedInterfaceNameGWTAsync(remoteService)») com.google.gwt.core.client.GWT.create(«fullQualifiedInterfaceNameGWT(remoteService)».class);
				com.google.gwt.user.client.rpc.ServiceDefTarget formEndpoint = (com.google.gwt.user.client.rpc.ServiceDefTarget) service;
				formEndpoint.setServiceEntryPoint(getModuleBaseUrl() + "/«serviceName(remoteService)»");
				return service;
			}
		«ENDIF»
	«ENDFOREACH»
}
«ENDFILE»

«FILE fullQualifiedGWTRemoteServiceLocatorInterfaceFileName()-»

package «fullQualifiedGWTRemoteServiceLocatorPackage()»;

public interface «gwtRemoteServiceLocatorInterfaceName()» {
	«FOREACH allElements().typeSelect(RemoteService) AS remoteService»
		«IF !isNonPublic(remoteService)»
		 	public «fullQualifiedInterfaceNameGWTAsync(remoteService)» get«serviceName(remoteService)»();
		«ENDIF»
 	«ENDFOREACH»
}
«ENDFILE»

«ENDDEFINE»
